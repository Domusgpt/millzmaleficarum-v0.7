/*
 * Axiom Void Styles for MillzMaleficarum Codex v0.7
 * Paradoxical dimension styling with impossible geometry effects
 */

/* Axiom Void Section Styling */
.axiomvoid-section {
  background: radial-gradient(circle at center, 
    rgba(20, 0, 40, 0.6) 0%, 
    rgba(0, 20, 40, 0.6) 35%, 
    rgba(40, 0, 20, 0.6) 65%, 
    rgba(0, 0, 0, 0.9) 100%);
  position: relative;
  overflow: hidden;
}

.axiomvoid-section::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    repeating-linear-gradient(45deg, 
      rgba(100, 0, 100, 0.1) 0px, 
      rgba(100, 0, 100, 0) 3px, 
      rgba(0, 100, 100, 0) 3px, 
      rgba(0, 100, 100, 0.1) 6px);
  mix-blend-mode: difference;
  animation: gridShift 20s linear infinite;
  opacity: 0.5;
  pointer-events: none;
}

.axiomvoid-section::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    radial-gradient(circle at 30% 40%, 
      rgba(255, 0, 255, 0.2) 0%, 
      rgba(255, 0, 255, 0) 20%),
    radial-gradient(circle at 70% 60%, 
      rgba(0, 255, 255, 0.2) 0%, 
      rgba(0, 255, 255, 0) 20%);
  filter: blur(10px);
  animation: voidPulse 15s ease-in-out infinite alternate;
  pointer-events: none;
}

@keyframes gridShift {
  0% { transform: translateX(0) translateY(0) rotate(0deg); }
  25% { transform: translateX(10px) translateY(-10px) rotate(1deg); }
  50% { transform: translateX(-10px) translateY(10px) rotate(-1deg); }
  75% { transform: translateX(10px) translateY(10px) rotate(1deg); }
  100% { transform: translateX(0) translateY(0) rotate(0deg); }
}

@keyframes voidPulse {
  0% { opacity: 0.3; filter: blur(10px) hue-rotate(0deg); }
  50% { opacity: 0.8; filter: blur(20px) hue-rotate(180deg); }
  100% { opacity: 0.3; filter: blur(10px) hue-rotate(360deg); }
}

/* Void Container for Symbols */
.void-container {
  width: 200px;
  height: 200px;
  margin: 2rem auto;
  position: relative;
  transform-style: preserve-3d;
  perspective: 1000px;
}

.void-symbol {
  position: absolute;
  width: 100%;
  height: 100%;
  background: linear-gradient(135deg, 
    rgba(100, 0, 100, 0.5), 
    rgba(0, 100, 100, 0.5));
  border-radius: 50%;
  box-shadow: 
    0 0 30px rgba(255, 0, 255, 0.5),
    0 0 60px rgba(0, 255, 255, 0.3);
  animation: voidSymbolTransform 15s infinite alternate ease-in-out;
  filter: blur(5px);
}

.void-symbol::before {
  content: '';
  position: absolute;
  top: 25%;
  left: 25%;
  width: 50%;
  height: 50%;
  border: 2px solid rgba(255, 255, 255, 0.5);
  border-radius: 0% 50% 50% 50%;
  transform: rotate(45deg);
  animation: innerSymbolRotate 10s linear infinite;
}

.void-symbol::after {
  content: '';
  position: absolute;
  top: 15%;
  left: 15%;
  width: 70%;
  height: 70%;
  border: 1px solid rgba(255, 255, 255, 0.3);
  transform: rotate(-45deg);
  animation: outerSymbolPulse 5s ease-in-out infinite;
}

@keyframes voidSymbolTransform {
  0% {
    border-radius: 50%;
    transform: rotateY(0deg) rotateX(0deg);
    background: linear-gradient(135deg, 
      rgba(100, 0, 100, 0.5), 
      rgba(0, 100, 100, 0.5));
  }
  20% {
    border-radius: 60% 40% 30% 70%;
    transform: rotateY(36deg) rotateX(-10deg);
    background: linear-gradient(180deg, 
      rgba(100, 0, 100, 0.5), 
      rgba(0, 100, 100, 0.5));
  }
  40% {
    border-radius: 30% 60% 70% 40%;
    transform: rotateY(72deg) rotateX(20deg);
    background: linear-gradient(225deg, 
      rgba(100, 0, 100, 0.5), 
      rgba(0, 100, 100, 0.5));
  }
  60% {
    border-radius: 40% 30% 10% 90%;
    transform: rotateY(108deg) rotateX(-15deg);
    background: linear-gradient(270deg, 
      rgba(100, 0, 100, 0.5), 
      rgba(0, 100, 100, 0.5));
  }
  80% {
    border-radius: 50% 60% 30% 40%;
    transform: rotateY(144deg) rotateX(25deg);
    background: linear-gradient(315deg, 
      rgba(100, 0, 100, 0.5), 
      rgba(0, 100, 100, 0.5));
  }
  100% {
    border-radius: 20% 40% 60% 80%;
    transform: rotateY(180deg) rotateX(-20deg);
    background: linear-gradient(360deg, 
      rgba(100, 0, 100, 0.5), 
      rgba(0, 100, 100, 0.5));
  }
}

@keyframes innerSymbolRotate {
  0% { transform: rotate(45deg); }
  100% { transform: rotate(405deg); }
}

@keyframes outerSymbolPulse {
  0% { transform: rotate(-45deg) scale(1); opacity: 0.3; }
  50% { transform: rotate(135deg) scale(1.2); opacity: 0.8; }
  100% { transform: rotate(315deg) scale(1); opacity: 0.3; }
}

/* Paradox Statement Styling */
.paradox-statement {
  background-color: rgba(30, 0, 60, 0.6);
  border-left: 4px solid;
  border-image: linear-gradient(to bottom, var(--accent1), var(--accent2)) 1;
  padding: 1.5rem;
  margin: 1.5rem 0;
  font-style: italic;
  position: relative;
  transition: all 0.5s ease;
  overflow: hidden;
}

.paradox-statement::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(45deg, 
    rgba(255, 0, 255, 0.1), 
    rgba(0, 255, 255, 0.1));
  mix-blend-mode: difference;
  opacity: 0;
  transition: opacity 0.5s ease;
}

.paradox-statement:hover {
  transform: translateX(5px);
  box-shadow: 0 0 15px rgba(255, 0, 255, 0.3);
}

.paradox-statement:hover::before {
  opacity: 1;
  animation: paradoxGlitch 2s infinite;
}

@keyframes paradoxGlitch {
  0% { transform: translateX(0); }
  20% { transform: translateX(-3px); filter: hue-rotate(90deg); }
  40% { transform: translateX(3px); filter: hue-rotate(180deg); }
  60% { transform: translateX(-2px); filter: hue-rotate(270deg); }
  80% { transform: translateX(2px); filter: hue-rotate(360deg); }
  100% { transform: translateX(0); }
}

/* Escher Space - Impossible Geometries */
.escher-space {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 1rem;
  margin: 2rem 0;
  transform-style: preserve-3d;
  perspective: 1000px;
}

.impossible-object {
  height: 150px;
  background-color: rgba(20, 0, 40, 0.7);
  border: 1px solid var(--accent3);
  display: flex;
  align-items: center;
  justify-content: center;
  position: relative;
  transform-style: preserve-3d;
  transition: all 0.5s ease;
}

.impossible-object::before {
  content: '';
  position: absolute;
  width: 80%;
  height: 80%;
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  opacity: 0.8;
  filter: drop-shadow(0 0 10px rgba(255, 0, 255, 0.5));
  transform-style: preserve-3d;
  animation: objectSpin 20s infinite linear;
}

.impossible-object[data-geometry="penrose-triangle"]::before {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Cpath fill='none' stroke='%23ff00ff' stroke-width='2' d='M20,80 L50,20 L80,80 L20,80 z'/%3E%3C/svg%3E");
}

.impossible-object[data-geometry="impossible-cube"]::before {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Cpath fill='none' stroke='%2300ffff' stroke-width='2' d='M30,30 L70,30 L70,70 L30,70 z M20,20 L60,20 L60,60 L20,60 z M30,30 L20,20 M70,30 L60,20 M70,70 L60,60 M30,70 L20,60'/%3E%3C/svg%3E");
}

.impossible-object[data-geometry="endless-staircase"]::before {
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'%3E%3Cpath fill='none' stroke='%23cc00ff' stroke-width='2' d='M20,80 L20,60 L40,60 L40,40 L60,40 L60,20 L80,20 L80,80 z'/%3E%3C/svg%3E");
}

@keyframes objectSpin {
  0% { transform: rotateY(0deg) rotateX(0deg); }
  50% { transform: rotateY(180deg) rotateX(180deg); }
  100% { transform: rotateY(360deg) rotateX(360deg); }
}

.impossible-object:hover {
  transform: scale(1.05);
  box-shadow: 0 0 20px rgba(255, 0, 255, 0.5);
}

/* Void Transmission */
.void-transmission {
  background: linear-gradient(to right,
    rgba(40, 0, 60, 0.8),
    rgba(0, 30, 60, 0.8));
  border-radius: 5px;
  margin: 2rem 0;
  padding: 2rem;
  position: relative;
  overflow: hidden;
}

.void-transmission::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: 
    linear-gradient(90deg, 
      rgba(255, 0, 255, 0) 0%,
      rgba(255, 0, 255, 0.1) 50%,
      rgba(255, 0, 255, 0) 100%);
  animation: transmissionScan 4s infinite linear;
  pointer-events: none;
}

@keyframes transmissionScan {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

.void-text {
  font-family: 'VT323', monospace;
  color: rgba(255, 255, 255, 0.7);
  font-size: 1.1rem;
  line-height: 1.8;
  text-align: center;
  letter-spacing: 1px;
}

/* Enhanced Portal Button for Axiom Void */
.portal-button[data-world-target="axiomvoid"] {
  background-color: rgba(40, 0, 40, 0.8);
  border: 2px solid var(--accent3);
  color: var(--accent3);
  overflow: hidden;
  position: relative;
}

.portal-button[data-world-target="axiomvoid"]::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: linear-gradient(45deg, 
    rgba(255, 0, 255, 0.2),
    rgba(0, 255, 255, 0.1),
    rgba(255, 0, 255, 0.2));
  transform: translateX(-100%);
  transition: transform 0.5s ease;
}

.portal-button[data-world-target="axiomvoid"]:hover {
  background-color: rgba(60, 0, 60, 0.9);
  box-shadow:
    0 0 15px rgba(255, 0, 255, 0.5),
    0 0 30px rgba(0, 255, 255, 0.3);
  text-shadow:
    0 0 5px rgba(255, 255, 255, 0.8),
    0 0 10px rgba(255, 0, 255, 0.8);
  transform: scale(1.05) translateY(-2px);
}

.portal-button[data-world-target="axiomvoid"]:hover::before {
  transform: translateX(100%);
}

/* Additional Text Styling for Axiom Void */
.axiomvoid-section .world-title {
  animation: voidTitleGlitch 5s infinite alternate;
}

@keyframes voidTitleGlitch {
  0% {
    text-shadow: 0 0 15px var(--accent2), 0 0 25px var(--accent2);
    filter: none;
  }
  20% {
    text-shadow:
      3px 0 0 rgba(255, 0, 255, 0.8),
      -3px 0 0 rgba(0, 255, 255, 0.8),
      0 0 20px rgba(255, 0, 255, 0.5);
    filter: hue-rotate(70deg);
  }
  40% {
    text-shadow:
      -2px 0 0 rgba(255, 0, 255, 0.8),
      2px 0 0 rgba(0, 255, 255, 0.8),
      0 0 30px rgba(0, 255, 255, 0.5);
    filter: hue-rotate(140deg);
  }
  60% {
    text-shadow:
      0 -2px 0 rgba(255, 0, 255, 0.8),
      0 2px 0 rgba(0, 255, 255, 0.8),
      0 0 20px rgba(255, 0, 255, 0.5);
    filter: hue-rotate(210deg);
  }
  80% {
    text-shadow:
      2px 2px 0 rgba(255, 0, 255, 0.8),
      -2px -2px 0 rgba(0, 255, 255, 0.8),
      0 0 25px rgba(0, 255, 255, 0.5);
    filter: hue-rotate(280deg);
  }
  100% {
    text-shadow: 0 0 15px var(--accent2), 0 0 25px var(--accent2);
    filter: hue-rotate(360deg);
  }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .escher-space {
    grid-template-columns: 1fr;
  }
  
  .void-container {
    width: 150px;
    height: 150px;
  }
  
  .void-text {
    font-size: 1rem;
  }
}

@media (max-width: 480px) {
  .void-container {
    width: 120px;
    height: 120px;
  }
  
  .paradox-statement {
    padding: 1rem;
  }
  
  .impossible-object {
    height: 120px;
  }
}